(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{516:function(a,t,r){"use strict";r.r(t);var e=r(20),s=Object(e.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"设计模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#设计模式"}},[a._v("#")]),a._v(" 设计模式")]),a._v(" "),r("h2",{attrs:{id:"_1、责任链模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1、责任链模式"}},[a._v("#")]),a._v(" 1、责任链模式")]),a._v(" "),r("p",[a._v("为了避免请求发送者与多个请求处理者耦合在一起，于是将所有请求的处理者通过前一对象记住其下一个对象的引用而连成一条链；当有请求发生时，可将请求沿着这条链传递，直到有对象处理它为止。"),r("strong",[a._v("可以通过数据链表来实现职责链模式")]),a._v("。")]),a._v(" "),r("p",[r("img",{attrs:{src:"/img/media/02fe09f70404c085ec3e7455aacb01d9.png",alt:""}})]),a._v(" "),r("h2",{attrs:{id:"_2、建造者模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2、建造者模式"}},[a._v("#")]),a._v(" 2、建造者模式")]),a._v(" "),r("p",[a._v("将一个复杂的对象分解为多个简单的对象，然后一步一步构建而成。它将变与不变相分离，即产品的组成部分是不变的，但每一部分是可以灵活选择的。")]),a._v(" "),r("p",[r("img",{attrs:{src:"/img/media/185d5b6d31b1009f9fadc3d1199f1698.png",alt:""}})]),a._v(" "),r("h2",{attrs:{id:"_3、工厂模式-结合注解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3、工厂模式-结合注解"}},[a._v("#")]),a._v(" 3、工厂模式（结合注解）")]),a._v(" "),r("p",[r("img",{attrs:{src:"/img/media/a7cc31576d959bfb30c999b079e08506.png",alt:""}})]),a._v(" "),r("p",[a._v("-----------------------------------------------------------------------")]),a._v(" "),r("p",[a._v("@ConditionalOnBean:当IOC容器中有waybillOperationProcessor接口的实现类时，才会向容器中注入WaybillOperationProcessorFactory")]),a._v(" "),r("p",[r("img",{attrs:{src:"/img/media/f57cacff8d6b95bbbf1ef69bd5a6cea6.png",alt:""}})]),a._v(" "),r("p",[a._v("------------------------------------------")]),a._v(" "),r("p",[r("img",{attrs:{src:"/img/media/ca2f446037c8ae8464e21a0ad7dbe415.png",alt:""}})]),a._v(" "),r("p",[a._v("-----------------------------------------------------------------------")]),a._v(" "),r("p",[r("img",{attrs:{src:"/img/media/1c4d585bee930942ff72fc5d525ec3db.png",alt:""}})]),a._v(" "),r("p",[a._v("-----------------------------------------------------------------------")]),a._v(" "),r("p",[r("img",{attrs:{src:"/img/media/87bd7a3b74281404ec8b34faffc2e18b.png",alt:""}})]),a._v(" "),r("p",[a._v("-----------------------------------------------------------------------")]),a._v(" "),r("p",[r("img",{attrs:{src:"/img/media/3f050ddefb804004bd08c10768b8fe62.png",alt:""}})]),a._v(" "),r("p",[a._v("-----------------------------------------------------------------------")]),a._v(" "),r("p",[r("img",{attrs:{src:"/img/media/ca9c5fb27d03d0d816692b13c9425049.png",alt:""}})]),a._v(" "),r("p",[a._v("-----------------------------------------------------------------------")]),a._v(" "),r("h2",{attrs:{id:"_4、模版方法模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4、模版方法模式"}},[a._v("#")]),a._v(" 4、模版方法模式")]),a._v(" "),r("p",[r("img",{attrs:{src:"/img/media/cc8ba16f0c0e206a88816829758814e8.png",alt:""}})]),a._v(" "),r("p",[r("img",{attrs:{src:"/img/media/d2ae7c7f276c0845ae76e2f5f50d4ca0.png",alt:""}})]),a._v(" "),r("h2",{attrs:{id:"_5、策略模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5、策略模式"}},[a._v("#")]),a._v(" 5、策略模式")])])}),[],!1,null,null,null);t.default=s.exports}}]);